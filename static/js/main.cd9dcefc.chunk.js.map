{"version":3,"sources":["typography.tsx","contants.ts","Components/Shared/Shared.tsx","Routes/Address/AddressPresenter.tsx","Routes/Address/index.ts","Routes/Address/AddressContainer.tsx","utils/format.ts","Components/Table/Table.tsx","Components/Table/TransactionTable/index.ts","Components/Table/TransactionTable/TransactionTable.tsx","Routes/Block/BlockPresenter.tsx","Routes/Block/index.ts","Routes/Block/BlockContainer.tsx","utils/ws.ts","Components/Paginated/Paginated.tsx","Components/Table/DataTable/index.tsx","Components/Table/DataTable/DataTable.tsx","Routes/Blocks/BlocksPresenter.tsx","Routes/Blocks/index.tsx","Routes/Blocks/BlocksContainer.tsx","Routes/Home/HomePresenter.tsx","Routes/Home/index.tsx","Routes/Home/HomeContainer.tsx","Routes/Transaction/TransactionPresenter.tsx","Routes/Transaction/index.ts","Routes/Transaction/TransactionContainer.tsx","Routes/Transactions/TransactionsPresenter.tsx","Routes/Transactions/index.tsx","Routes/Transactions/TransactionsContainer.tsx","Components/Header/Header.tsx","Components/Header/index.tsx","Components/App/AppPresenter.tsx","Components/App/AppContainer.tsx","Components/App/index.tsx","index.tsx"],"names":["typography","Typography","bodyFontFamily","googleFonts","name","styles","headerFontFamily","includeNormalize","toString","API_URL","URL_BLOCKS","URL_TRANSACTIONS","Title","styled","div","_templateObject","ImportantText","span","_templateObject2","LinkText","Link","_templateObject3","AddressPresenter","_ref","address","balance","react_default","a","createElement","Fragment","AddressContainer","state","isLoading","_getBlockData","_callee","_ref2","regenerator_default","wrap","_context","prev","next","axios","get","concat","sent","data","_this","setState","stop","this","props","match","params","Address_AddressPresenter","Object","assign","Component","getDateStrFromSeconds","seconds","date","Date","setSeconds","toUTCString","TableCard","Table_templateObject","theme","boxShadow","TableHeader","header","Table_templateObject2","TableData","Table_templateObject3","HeaderItem","_templateObject4","textEllipsis","TableRow","_templateObject5","TableCell","_templateObject6","_ref3","TableLink","_templateObject7","_ref4","Table","_ref5","title","headers","children","map","index","key","TransactionTable","Components_Table_Table","from","to","amount","timeStamp","id","BlockPresenter","_ref$block","block","hash","difficulty","nonce","Table_TransactionTable","BlockContainer","prevHash","Block_BlockPresenter","parseMessage","message","parsedMessage","string","JSON","parse","e","console","error","stringToJSON","type","addSocketEventListener","callback","WebSocket","addEventListener","undefined","PaginatedContainer","Paginated_templateObject","Paginated","pageCount","onPageChange","react_paginate_dist_default","pageRangeDisplayed","marginPagesDisplayed","_onPageChange","_x","apply","arguments","selected","previousLabel","nextLabel","containerClassName","DataTable","linkPages","linkParams","item","keyIndex","BlocksPresenter","blocks","total","totalPages","setCurrentPage","Table_DataTable","slice","Components_Paginated_Paginated","BlocksContainer","currentPage","setStateFromSocket","prevState","objectSpread","toConsumableArray","getBlocksData","_ref2$data","_","Blocks_BlocksPresenter","HomePresenter","txs","HomeContainer","getHomeData","Home_HomePresenter","TransactionPresenter","_ref$tx","tx","TransactionContainer","txIns","txOuts","_getTransactionData","Transaction_TransactionPresenter","TransactionsPresenter","TransactionsContainer","Transactions_TransactionsPresenter","MenuStatus","input","Header_templateObject","MenuStateIcon","i","Header_templateObject2","Nav","nav","Header_templateObject3","List","ul","Header_templateObject4","ListItem","li","Header_templateObject5","SLink","Header_templateObject6","isActive","Span","Header_templateObject7","Main","main","_templateObject8","Header","menuStatus","handleMenuStatus","window","checked","readOnly","className","onClick","location","pathname","AppContainer","AppPresenter_templateObject","AppPresenter","BrowserRouter","Components_Header","Switch","Route","component","Home","exact","path","Blocks","Transactions","Block","Transaction","Address","GlobalStyle","createGlobalStyle","AppContainer_templateObject","reset","overflow","text-overflow","white-space","styled_components_browser_esm","App_AppPresenter","ReactDOM","render","Components_App","document","getElementById"],"mappings":"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","file":"static/js/main.cd9dcefc.chunk.js","sourcesContent":["import Typography from 'typography';\r\n\r\nconst typography = new Typography({\r\n  bodyFontFamily: ['Open Sans', 'Helvetica', 'sans-serif'],\r\n  googleFonts: [\r\n    {\r\n      name: 'Nunito',\r\n      styles: ['400', '700'],\r\n    },\r\n    {\r\n      name: 'Open Sans',\r\n      styles: ['400', '600'],\r\n    },\r\n  ],\r\n  headerFontFamily: ['Nunito', 'Helvetica', 'sans-serif'],\r\n  includeNormalize: false,\r\n});\r\n\r\nexport default typography.toString();\r\n","export const API_URL = 'https://js-bitcoin.herokuapp.com';\r\nexport const WS_URL = 'ws:js-bitcoin.herokuapp.com';\r\n\r\nexport const URL_BLOCKS = 'blocks';\r\nexport const URL_TRANSACTIONS = 'transactions';\r\nexport const URL_ADDRESS = 'address';\r\n","import { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nexport const Title = styled.div`\r\n  margin-bottom: 12px;\r\n  font-size: 18px;\r\n`;\r\n\r\nexport const ImportantText = styled.span`\r\n  color: #000;\r\n`;\r\n\r\nexport const LinkText = styled(Link)`\r\n  color: #2196f3;\r\n`;\r\n","import React, { FC } from 'react';\r\nimport { ILoading } from '../../@types/api';\r\nimport { ImportantText, Title } from '../../Components/Shared';\r\n\r\nexport interface IAddress extends ILoading {\r\n  balance: string;\r\n}\r\n\r\ninterface IProps extends IAddress {\r\n  address: string;\r\n}\r\n\r\nconst AddressPresenter: FC<IProps> = ({ address, balance }) => (\r\n  <>\r\n    <Title>\r\n      <ImportantText>Address:</ImportantText> {address}\r\n    </Title>\r\n    <Title>\r\n      <ImportantText>Balance:</ImportantText> {balance}\r\n    </Title>\r\n  </>\r\n);\r\n\r\nexport default AddressPresenter;\r\n","import AddressContainer from './AddressContainer';\r\nexport default AddressContainer;\r\n","import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { API_URL } from '../../contants';\r\nimport AddressPresenter, { IAddress } from './AddressPresenter';\r\n\r\ninterface IMatchParams {\r\n  address: string;\r\n}\r\n\r\ntype Props = RouteComponentProps<IMatchParams>;\r\ntype State = IAddress;\r\n\r\nclass AddressContainer extends Component<Props, State> {\r\n  public state: State = {\r\n    balance: '',\r\n    isLoading: false,\r\n  };\r\n\r\n  public componentDidMount() {\r\n    const { match:{ params:{ address } } } = this.props;\r\n    this._getBlockData(address);\r\n  }\r\n\r\n  public _getBlockData = async (address: string) => {\r\n    const { data: balance } = await axios.get<string>(`${API_URL}/address/${address}`);\r\n    this.setState({\r\n      balance,\r\n      isLoading: false,\r\n    });\r\n  }\r\n\r\n  public render() {\r\n    const { match: { params: { address } } } = this.props;\r\n\r\n    return <AddressPresenter {...this.state} address={address} />;\r\n  }\r\n}\r\n\r\nexport default AddressContainer;\r\n","export const getDateStrFromSeconds = (seconds: number) => {\r\n  const date = new Date(0);\r\n  date.setSeconds(seconds);\r\n  return date.toUTCString();\r\n};\r\n\r\nexport const stringToJSON = (string: string) => {\r\n  try {\r\n    return JSON.parse(string);\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n};\r\n","import React, { FC, ReactNode } from 'react';\r\nimport styled from 'styled-components';\r\nimport { LinkText } from '../Shared/Shared';\r\n\r\nconst TableCard = styled.div`\r\n  background-color: #fff;\r\n  width: 100%;\r\n  margin-bottom: 40px;\r\n  box-shadow: ${({ theme }) => theme.boxShadow};\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nconst TableHeader = styled.header`\r\n  border-bottom: 2px solid rgba(0, 0, 0, 0.15);\r\n`;\r\n\r\nconst TableData = styled.div`\r\n  width: 100%;\r\n`;\r\n\r\nconst HeaderItem = styled.span`\r\n  font-weight: 600;\r\n  color: #333333;\r\n  ${({ theme }) => theme.textEllipsis};\r\n`;\r\n\r\nexport const TableRow = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 15px;\r\n  width: 100%;\r\n  font-size: 14px;\r\n  text-align: center;\r\n\r\n  & + & {\r\n    border-top: 1px solid rgba(0, 0, 0, 0.15);\r\n  }\r\n\r\n  & * {\r\n    width: 15%;\r\n    padding-right: 10px;\r\n  }\r\n\r\n  & *:nth-child(2) {\r\n    width: 40%;\r\n  }\r\n`;\r\n\r\nexport const TableCell = styled.div`\r\n  ${({ theme }) => theme.textEllipsis};\r\n`;\r\n\r\nexport const TableLink = styled(LinkText)`\r\n  ${({ theme }) => theme.textEllipsis};\r\n  color: #2196f3;\r\n`;\r\n\r\nexport interface ITableProps {\r\n  title: string;\r\n  headers: string[];\r\n}\r\n\r\ninterface IProps extends ITableProps {\r\n  children: ReactNode;\r\n}\r\n\r\nconst Table: FC<IProps> = ({\r\n  title,\r\n  headers,\r\n  children,\r\n}) => (\r\n  <>\r\n    <h2>{title}</h2>\r\n    <TableCard>\r\n      <TableHeader>\r\n        <TableRow>\r\n          {headers.map((header, index) => (\r\n              <HeaderItem key={index}>{header}</HeaderItem>\r\n            ))}\r\n        </TableRow>\r\n      </TableHeader>\r\n      <TableData>\r\n        {children}\r\n      </TableData>\r\n    </TableCard>\r\n  </>\r\n);\r\n\r\nexport default Table;\r\n","import TransactionTable from './TransactionTable';\r\nexport default TransactionTable;\r\n","import React, { FC } from 'react';\r\nimport { ITransaction } from '../../../@types/block';\r\nimport { URL_ADDRESS, URL_TRANSACTIONS } from '../../../contants';\r\nimport { getDateStrFromSeconds } from '../../../utils/format';\r\nimport Table, { ITableProps, TableCell, TableLink, TableRow } from '../Table';\r\n\r\ninterface IProps extends ITableProps {\r\n  data: ITransaction[];\r\n}\r\n\r\nconst TransactionTable: FC<IProps> = ({\r\n  title,\r\n  headers,\r\n  data,\r\n}) => (\r\n  <Table\r\n    title={title}\r\n    headers={headers}\r\n  >\r\n    {data.map(({ from, to, amount, timeStamp, id }, index) => (\r\n      <TableRow key={index}>\r\n        <TableLink to={`/${URL_ADDRESS}/${from}`}>{from}</TableLink>\r\n        <TableCell>{amount}</TableCell>\r\n        <TableLink to={`/${URL_ADDRESS}/${to}`}>{to}</TableLink>\r\n        <TableCell>{getDateStrFromSeconds(timeStamp)}</TableCell>\r\n        <TableLink to={`/${URL_TRANSACTIONS}/${id}`}>Link</TableLink>\r\n      </TableRow>\r\n    ))}\r\n  </Table>\r\n);\r\n\r\nexport default TransactionTable;\r\n","import React, { FC } from 'react';\r\nimport { ILoading } from '../../@types/api';\r\nimport { IBlock } from '../../@types/block';\r\nimport { ImportantText, Title } from '../../Components/Shared';\r\nimport TransactionTable from '../../Components/Table/TransactionTable';\r\nimport { getDateStrFromSeconds } from '../../utils/format';\r\n\r\nexport interface IBlockData extends ILoading {\r\n  block: IBlock;\r\n}\r\n\r\nconst BlockPresenter: FC<IBlockData> = ({\r\n  block: { index, hash, timeStamp, difficulty, nonce, data },\r\n}) => (\r\n  <>\r\n    <Title>Block #{index}</Title>\r\n    <Title>\r\n      <ImportantText>Hash:</ImportantText> {hash}\r\n    </Title>\r\n    <Title>\r\n      <ImportantText>TimeStamp:</ImportantText> {getDateStrFromSeconds(timeStamp)}\r\n    </Title>\r\n    <Title>\r\n      <ImportantText>Difficulty:</ImportantText> {difficulty}\r\n    </Title>\r\n    <Title>\r\n      <ImportantText>Nonce:</ImportantText> {nonce}\r\n    </Title>\r\n\r\n    <TransactionTable\r\n      title=\"Transactions\"\r\n      headers={['From', 'Amount', 'To', 'Timestamp', 'See detail']}\r\n      data={data}\r\n    />\r\n  </>\r\n);\r\n\r\nexport default BlockPresenter;\r\n","import BlockContainer from './BlockContainer';\r\nexport default BlockContainer;\r\n","import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { IBlock } from '../../@types/block';\r\nimport { API_URL, URL_BLOCKS } from '../../contants';\r\nimport BlockPresenter, { IBlockData } from './BlockPresenter';\r\n\r\ninterface IMatchParams {\r\n  index: string;\r\n}\r\n\r\ntype Props = RouteComponentProps<IMatchParams>;\r\ntype State = IBlockData;\r\n\r\nclass BlockContainer extends Component<Props, State> {\r\n  public state: State = {\r\n    block: {\r\n      amount: 0,\r\n      data: [],\r\n      difficulty: 0,\r\n      hash: '',\r\n      index: 0,\r\n      nonce: 0,\r\n      prevHash: '',\r\n      timeStamp: 0,\r\n    },\r\n    isLoading: false,\r\n  };\r\n\r\n  public componentDidMount() {\r\n    const { match:{ params:{ index } } } = this.props;\r\n    this._getBlockData(index);\r\n  }\r\n\r\n  public _getBlockData = async (index: string) => {\r\n    const { data: block } = await axios.get<IBlock>(`${API_URL}/${URL_BLOCKS}/${index}`);\r\n    this.setState({\r\n      block,\r\n      isLoading: false,\r\n    });\r\n  }\r\n\r\n  public render() {\r\n    return <BlockPresenter {...this.state} />;\r\n  }\r\n}\r\n\r\nexport default BlockContainer;\r\n","import { WS_URL } from '../contants';\r\nimport { stringToJSON } from './format';\r\n\r\nexport const parseMessage = (message: any) => {\r\n  if (typeof message.data === 'string') {\r\n    const { data } = message;\r\n    const parsedMessage = stringToJSON(data);\r\n\r\n    if (parsedMessage !== null) {\r\n      const { type } = parsedMessage;\r\n\r\n      if (type === 'BLOCKCHAIN_RESPONSE') {\r\n        return parsedMessage.data;\r\n      }\r\n      return null;\r\n    }\r\n  }\r\n};\r\n\r\nexport const addSocketEventListener = (callback: (message: any) => any) => {\r\n  const socket = new WebSocket(WS_URL);\r\n\r\n  socket.addEventListener('message', (message) => {\r\n    const parsedMessage = parseMessage(message);\r\n    if (parsedMessage !== null && parsedMessage !== undefined) {\r\n      callback(parsedMessage);\r\n    }\r\n  });\r\n};\r\n","import React, { FC } from 'react';\r\nimport ReactPaginate from 'react-paginate';\r\nimport styled from 'styled-components';\r\n\r\nconst PaginatedContainer = styled.div`\r\n  & .paginated-container {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin: 0;\r\n\r\n    & li {\r\n      margin: 0;\r\n      border: 1px solid #dadada;\r\n      background: #fff;\r\n      color: #768a94;\r\n\r\n      &:not(:last-child) {\r\n        border-right: none;\r\n      }\r\n\r\n      & a {\r\n        cursor: pointer;\r\n        display: flex;\r\n        justify-content: center;\r\n        padding: 10px 10px;\r\n        width: 100%;\r\n        height: 100%;\r\n        user-select: none;\r\n      }\r\n\r\n      &.selected {\r\n        background: #3582b4;\r\n        color: #fff\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\ninterface IProps {\r\n  pageCount: number;\r\n  onPageChange: (currentPage: number) => void;\r\n}\r\n\r\nconst Paginated: FC<IProps> = ({ pageCount, onPageChange }) => (\r\n  <PaginatedContainer>\r\n    <ReactPaginate\r\n      pageCount={pageCount}\r\n      pageRangeDisplayed={2}\r\n      marginPagesDisplayed={3}\r\n      onPageChange={({ selected }) => onPageChange(selected + 1)}\r\n      previousLabel=\"Prev\"\r\n      nextLabel=\"Next\"\r\n      containerClassName=\"paginated-container\"\r\n    />\r\n  </PaginatedContainer>\r\n);\r\n\r\nexport default Paginated;\r\n","import DataTable from './DataTable';\r\nexport default DataTable;\r\n","import React, { FC } from 'react';\r\nimport { getDateStrFromSeconds } from '../../../utils/format';\r\nimport Table, { ITableProps, TableCell, TableLink, TableRow } from '../Table';\r\n\r\ninterface IProps extends ITableProps {\r\n  data: Array<{[key: string]: any}>;\r\n  selected: string[];\r\n  linkPages: string[];\r\n  linkParams: string[];\r\n}\r\n\r\nconst DataTable: FC<IProps> = ({\r\n  title,\r\n  headers,\r\n  data,\r\n  selected,\r\n  linkPages,\r\n  linkParams,\r\n}) => (\r\n  <Table\r\n    title={title}\r\n    headers={headers}\r\n  >\r\n    {data.map((item, index) => (\r\n      <TableRow key={index}>\r\n        {selected.map((key, keyIndex) => {\r\n          if (!!linkPages[keyIndex]) {\r\n            return (\r\n              <TableLink to={`/${linkPages[keyIndex]}/${item[linkParams[keyIndex]]}`}>\r\n                {item[key]}\r\n              </TableLink>\r\n            );\r\n          }\r\n          return (\r\n              <TableCell key={keyIndex}>\r\n                {key === 'timeStamp' ?\r\n                  getDateStrFromSeconds(item[key]) :\r\n                  item[key]}\r\n              </TableCell>\r\n          );\r\n\r\n        })}\r\n      </TableRow>\r\n    ))}\r\n  </Table>\r\n);\r\n\r\nexport default DataTable;\r\n","import React, { FC } from 'react';\r\nimport { ILoading } from '../../@types/api';\r\nimport { IBlock, IPaginated } from '../../@types/block';\r\nimport Paginated from '../../Components/Paginated/Paginated';\r\nimport DataTable from '../../Components/Table/DataTable';\r\nimport { Omit } from '../../utils/typescript';\r\n\r\ntype Pagenated = Omit<IPaginated, 'data' | 'perPage'>;\r\n\r\nexport interface IBlocksData extends ILoading, Pagenated {\r\n  blocks: IBlock[];\r\n  setCurrentPage: (currentPage: number) => void;\r\n}\r\n\r\nconst BlocksPresenter: FC<IBlocksData> = ({\r\n  blocks,\r\n  total,\r\n  totalPages,\r\n  setCurrentPage,\r\n}) => (\r\n  <>\r\n    <DataTable\r\n      title={`All Blocks (${total || 0})`}\r\n      data={blocks.slice(0, 15)}\r\n      headers={['Index', 'Hash', 'Difficulty', 'Amount', 'TimeStamp']}\r\n      selected={['index', 'hash', 'difficulty', 'amount', 'timeStamp']}\r\n      linkPages={['blocks', 'blocks']}\r\n      linkParams={['index', 'index']}\r\n    />\r\n    <Paginated\r\n      pageCount={totalPages}\r\n      onPageChange={setCurrentPage}\r\n    />\r\n  </>\r\n);\r\n\r\nexport default BlocksPresenter;\r\n","import BlocksContainer from './BlocksContainer';\r\nexport default BlocksContainer;\r\n","import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport { IBlock, IPaginated } from '../../@types/block';\r\nimport { API_URL, URL_BLOCKS } from '../../contants';\r\nimport { Omit } from '../../utils/typescript';\r\nimport { addSocketEventListener } from '../../utils/ws';\r\nimport BlocksPresenter, { IBlocksData } from './BlocksPresenter';\r\n\r\ntype State = Omit<IBlocksData, 'setCurrentPage'>;\r\n\r\nclass BlocksContainer extends Component<{}, State> {\r\n  public state: State = {\r\n    blocks: [],\r\n    currentPage: 1,\r\n    isLoading: true,\r\n    total: 0,\r\n    totalPages: 0,\r\n  };\r\n\r\n  public componentDidMount() {\r\n    this.getBlocksData();\r\n\r\n    addSocketEventListener(this.setStateFromSocket);\r\n  }\r\n\r\n  public componentDidUpdate(_: {}, prevState: State) {\r\n    const { currentPage: prevPage } = prevState;\r\n    const { currentPage } = this.state;\r\n\r\n    if (prevPage !== currentPage) {\r\n      this.getBlocksData();\r\n    }\r\n  }\r\n\r\n  public setStateFromSocket = (message: any) => {\r\n    this.setState((prevState: State) => ({\r\n      ...prevState,\r\n      blocks: [...message, ...prevState.blocks],\r\n      total: prevState.total += 1,\r\n    }));\r\n  }\r\n\r\n  public getBlocksData = async () => {\r\n    const { data: {\r\n      currentPage, total, totalPages, data: blocks,\r\n    } } = await axios.get<IPaginated<IBlock[]>>(\r\n      `${API_URL}/${URL_BLOCKS}?page=${this.state.currentPage}`,\r\n    );\r\n\r\n    this.setState({\r\n      blocks,\r\n      currentPage,\r\n      isLoading: false,\r\n      total,\r\n      totalPages,\r\n    });\r\n  }\r\n\r\n  public setCurrentPage = (currentPage: number) => {\r\n    this.setState({ currentPage });\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <BlocksPresenter\r\n        {...this.state}\r\n        setCurrentPage={this.setCurrentPage}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default BlocksContainer;\r\n","import React, { FC } from 'react';\r\nimport { ILoading } from '../../@types/api';\r\nimport { IBlock, ITransaction } from '../../@types/block';\r\nimport DataTable from '../../Components/Table/DataTable';\r\n\r\nexport interface IHomeData extends ILoading {\r\n  blocks: IBlock[];\r\n  txs: ITransaction[];\r\n}\r\n\r\nconst HomePresenter: FC<IHomeData> = ({ blocks, txs }) => (\r\n  <>\r\n    <DataTable\r\n      title=\"Latest Blocks\"\r\n      headers={['Index', 'Hash', 'Amount', 'Difficulty', 'TimeStamp']}\r\n      data={blocks.slice(0, 5)}\r\n      selected={['index', 'hash', 'amount', 'difficulty', 'timeStamp']}\r\n      linkPages={['blocks', 'blocks']}\r\n      linkParams={['index', 'index']}\r\n    />\r\n    <DataTable\r\n      title=\"Latest Transactions\"\r\n      headers={['Amount', 'Transaction ID', 'TimeStamp']}\r\n      data={txs.slice(0, 5)}\r\n      selected={['amount', 'id', 'timeStamp']}\r\n      linkPages={['transactions', 'transactions']}\r\n      linkParams={['id', 'id']}\r\n    />\r\n  </>\r\n);\r\n\r\nexport default HomePresenter;\r\n","import HomeContainer from './HomeContainer';\r\nexport default HomeContainer;\r\n","import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport { IBlock, ITransaction } from '../../@types/block';\r\nimport { API_URL, URL_BLOCKS, URL_TRANSACTIONS } from '../../contants';\r\nimport { addSocketEventListener } from '../../utils/ws';\r\nimport HomePresenter, { IHomeData } from './HomePresenter';\r\n\r\nclass HomeContainer extends Component<{}, IHomeData> {\r\n  public state: IHomeData = {\r\n    blocks: [],\r\n    isLoading: true,\r\n    txs: [],\r\n  };\r\n\r\n  public componentDidMount() {\r\n    this.getHomeData();\r\n\r\n    addSocketEventListener(this.setStateFromSocket);\r\n  }\r\n\r\n  public setStateFromSocket = (message: any) => {\r\n    this.setState((prevState: IHomeData) => ({\r\n      ...prevState,\r\n      blocks: [...message, ...prevState.blocks],\r\n      txs: [...message[0].data, ...prevState.txs],\r\n    }));\r\n  }\r\n\r\n  public getHomeData = async () => {\r\n    const { data: blocks } = await axios.get<IBlock[]>(`${API_URL}/${URL_BLOCKS}/latest`);\r\n    const { data: txs } = await axios.get<ITransaction[]>(`${API_URL}/${URL_TRANSACTIONS}/latest`);\r\n\r\n    this.setState({\r\n      blocks,\r\n      isLoading: false,\r\n      txs,\r\n    });\r\n\r\n  }\r\n\r\n  public render () {\r\n    return <HomePresenter {...this.state} />;\r\n  }\r\n}\r\n\r\nexport default HomeContainer;\r\n","import React, { FC } from 'react';\r\nimport { ILoading } from '../../@types/api';\r\nimport { ITransaction } from '../../@types/block';\r\nimport { ImportantText, Title } from '../../Components/Shared';\r\nimport { LinkText } from '../../Components/Shared/Shared';\r\nimport { URL_ADDRESS } from '../../contants';\r\nimport { getDateStrFromSeconds } from '../../utils/format';\r\n\r\nexport interface ITransactionData extends ILoading {\r\n  tx: ITransaction;\r\n}\r\n\r\nconst TransactionPresenter: FC<ITransactionData> = ({\r\n  tx: { amount, from, id, timeStamp, to },\r\n}) => (\r\n  <>\r\n    <Title>\r\n      <ImportantText>Transaction:</ImportantText> {id}\r\n    </Title>\r\n    <Title>\r\n      <ImportantText>Amount:</ImportantText> {amount}\r\n    </Title>\r\n    <Title>\r\n      <ImportantText>Timestamp:</ImportantText> {getDateStrFromSeconds(timeStamp)}\r\n    </Title>\r\n    <Title>\r\n      <ImportantText>From:</ImportantText>\r\n      <LinkText to={`/${URL_ADDRESS}/${from}`}>{from}</LinkText>\r\n    </Title>\r\n    <Title>\r\n      <ImportantText>To:</ImportantText>\r\n      <LinkText to={`/${URL_ADDRESS}/${to}`}>{to}</LinkText>\r\n    </Title>\r\n  </>\r\n);\r\n\r\nexport default TransactionPresenter;\r\n","import TransactionContainer from './TransactionContainer';\r\nexport default TransactionContainer;\r\n","import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { ITransaction } from '../../@types/block';\r\nimport { API_URL, URL_TRANSACTIONS } from '../../contants';\r\nimport TransactionPresenter, { ITransactionData } from './TransactionPresenter';\r\n\r\ninterface IMatchParams {\r\n  id: string;\r\n}\r\n\r\ntype Props = RouteComponentProps<IMatchParams>;\r\ntype State = ITransactionData;\r\n\r\nclass TransactionContainer extends Component<Props, State> {\r\n  public state: State = {\r\n    isLoading: false,\r\n    tx: {\r\n      amount: 0,\r\n      from: '',\r\n      id: '',\r\n      timeStamp: 0,\r\n      to: '',\r\n      txIns: [],\r\n      txOuts: [],\r\n    },\r\n  };\r\n\r\n  public componentDidMount() {\r\n    const { match:{ params:{ id } } } = this.props;\r\n    this._getTransactionData(id);\r\n  }\r\n\r\n  public _getTransactionData = async (id: string) => {\r\n    const { data: tx } = await axios.get<ITransaction>(\r\n      `${API_URL}/${URL_TRANSACTIONS}/${id}`,\r\n    );\r\n    this.setState({\r\n      isLoading: false,\r\n      tx,\r\n    });\r\n  }\r\n\r\n  public render() {\r\n    return <TransactionPresenter {...this.state} />;\r\n  }\r\n}\r\n\r\nexport default TransactionContainer;\r\n","import React, { FC } from 'react';\r\nimport { ILoading } from '../../@types/api';\r\nimport { IPaginated, ITransaction } from '../../@types/block';\r\nimport Paginated from '../../Components/Paginated/Paginated';\r\nimport DataTable from '../../Components/Table/DataTable';\r\nimport { Omit } from '../../utils/typescript';\r\n\r\ntype Pagenated = Omit<IPaginated, 'data' | 'perPage'>;\r\n\r\nexport interface ITransactionsData extends ILoading, Pagenated {\r\n  txs: ITransaction[];\r\n  setCurrentPage: (currentPage: number) => void;\r\n}\r\n\r\nconst TransactionsPresenter: FC<ITransactionsData> = ({\r\n  txs,\r\n  total,\r\n  totalPages,\r\n  setCurrentPage,\r\n}) => (\r\n  <>\r\n    <DataTable\r\n      title={`All Transactions (${total || 0})`}\r\n      data={txs.slice(0, 15)}\r\n      headers={['Amount', 'Transaction ID', 'Timestamp']}\r\n      selected={['amount', 'id', 'timeStamp']}\r\n      linkPages={['transactions', 'transactions']}\r\n      linkParams={['id', 'id']}\r\n    />\r\n    <Paginated\r\n      pageCount={totalPages}\r\n      onPageChange={setCurrentPage}\r\n    />\r\n  </>\r\n);\r\n\r\nexport default TransactionsPresenter;\r\n","import TransactionsContainer from './TransactionsContainer';\r\nexport default TransactionsContainer;\r\n","import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport { IPaginated, ITransaction } from '../../@types/block';\r\nimport { API_URL, URL_TRANSACTIONS } from '../../contants';\r\nimport { Omit } from '../../utils/typescript';\r\nimport { addSocketEventListener } from '../../utils/ws';\r\nimport TransactionsPresenter, { ITransactionsData } from './TransactionsPresenter';\r\n\r\ntype State = Omit<ITransactionsData, 'setCurrentPage'>;\r\n\r\nclass BlocksContainer extends Component<{}, State> {\r\n  public state: State = {\r\n    currentPage: 1,\r\n    isLoading: true,\r\n    total: 0,\r\n    totalPages: 0,\r\n    txs: [],\r\n  };\r\n\r\n  public componentDidMount() {\r\n    this.getBlocksData();\r\n\r\n    addSocketEventListener(this.setStateFromSocket);\r\n  }\r\n\r\n  public componentDidUpdate(_: {}, prevState: State) {\r\n    const { currentPage: prevPage } = prevState;\r\n    const { currentPage } = this.state;\r\n\r\n    if (prevPage !== currentPage) {\r\n      this.getBlocksData();\r\n    }\r\n  }\r\n\r\n  public setStateFromSocket = (message: any) => {\r\n    this.setState((prevState: State) => ({\r\n      ...prevState,\r\n      total: prevState.total += 1,\r\n      txs: [...message[0].data, ...prevState.txs],\r\n    }));\r\n  }\r\n\r\n  public getBlocksData = async () => {\r\n    const { data: {\r\n      currentPage, total, totalPages, data: txs,\r\n    } } = await axios.get<IPaginated<ITransaction[]>>(\r\n      `${API_URL}/${URL_TRANSACTIONS}?page=${this.state.currentPage}`,\r\n    );\r\n\r\n    this.setState({\r\n      currentPage,\r\n      isLoading: false,\r\n      total,\r\n      totalPages,\r\n      txs,\r\n    });\r\n  }\r\n\r\n  public setCurrentPage = (currentPage: number) => {\r\n    this.setState({ currentPage });\r\n  }\r\n\r\n  public render() {\r\n    return (\r\n      <TransactionsPresenter\r\n        {...this.state}\r\n        setCurrentPage={this.setCurrentPage}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default BlocksContainer;\r\n","import React, { Component, ReactNode } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { URL_BLOCKS, URL_TRANSACTIONS } from '../../contants';\r\n\r\nconst MenuStatus = styled.input`\r\n  display: none;\r\n\r\n  &:checked {\r\n    & ~ nav {\r\n      width: 250px;\r\n\r\n      & label[class=\"menu_state\"] i::before {\r\n        margin-right: 3px;\r\n        content: \"\\f053\";\r\n      }\r\n\r\n      & ul {\r\n        width: 100%;\r\n        & li a i {\r\n          border-right: 1px solid #2f343e;\r\n        }\r\n        & li a span {\r\n          opacity: 1;\r\n          transition: opacity 0.25s ease-in-out;\r\n        }\r\n      }\r\n    }\r\n\r\n    & ~ main {\r\n      margin-left: 250px;\r\n      width: calc(100% - 250px);\r\n    }\r\n  }\r\n`;\r\n\r\nconst MenuStateIcon = styled.i`\r\n  position: absolute;\r\n  z-index: 1;\r\n  cursor: pointer;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  top: 50%;\r\n  right: -13px;\r\n  width: 25px;\r\n  height: 25px;\r\n  background: #fff;\r\n  border: 1px solid #ddd;\r\n  border-radius: 50%;\r\n  font-size: 10px;\r\n  box-shadow: 0 1px 3px rgba(0,0,0,0.12),\r\n              0 1px 2px rgba(0,0,0,0.24);\r\n  transition: width 0.15s ease-in-out;\r\n\r\n  &::before {\r\n    line-height: 25px;\r\n    content: \"\\f054\";\r\n  }\r\n\r\n  &:hover {\r\n    box-shadow: 0 10px 20px rgba(0,0,0,0.19),\r\n                0 6px 6px rgba(0,0,0,0.23);\r\n  }\r\n`;\r\n\r\nconst Nav = styled.nav`\r\n  position: fixed;\r\n  z-index: 9;\r\n  top: 0;\r\n  left: 0;\r\n  bottom: 0;\r\n  background: #383e49;\r\n  color: #9aa3a8;\r\n  width: 50px;\r\n  transition: all 0.15s ease-in-out;\r\n`;\r\n\r\nconst List = styled.ul`\r\n  overflow: hidden;\r\n  display: block;\r\n  list-style-type: none;\r\n  width: 50px;\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n\r\nconst ListItem = styled.li`\r\n  border: 1px solid #2f343e;\r\n  position: relative;\r\n  margin: 0;\r\n\r\n  &:not(:last-child) {\r\n    border-bottom: none;\r\n  }\r\n`;\r\n\r\ninterface ISLink {\r\n  isActive: boolean;\r\n}\r\n\r\nconst SLink = styled(Link)`\r\n  position: relative;\r\n  display: block;\r\n  white-space: nowrap;\r\n  width: 100%;\r\n  height: 50px;\r\n  background: ${(props: ISLink) => (props.isActive && '#4c515d')};\r\n  color: ${(props: ISLink) => (props.isActive ? '#fff' : '#9aa3a8')};\r\n  transition: all 0.15s ease-in-out;\r\n\r\n  &:hover {\r\n    background: #4c515d;\r\n    color: #fff;\r\n  }\r\n\r\n  & * {\r\n    height: 100%;\r\n    display: inline-block;\r\n  }\r\n\r\n  & i {\r\n    text-align: center;\r\n    width: 50px;\r\n    z-index: 999999;\r\n\r\n    &.fas {\r\n      line-height: 50px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Span = styled.span`\r\n  opacity: 0;\r\n  padding-left: 25px;\r\n  line-height: 50px;\r\n  transition: opacity 0.1s ease-in-out;\r\n`;\r\n\r\nconst Main = styled.main`\r\n  width: calc(100% - 50px);\r\n  height: 100%;\r\n  transition: all 0.15s ease-in-out;\r\n  margin-left: 50px;\r\n  padding: 30px;\r\n`;\r\n\r\ninterface IProps {\r\n  children: ReactNode;\r\n}\r\n\r\ninterface IState {\r\n  menuStatus: boolean;\r\n}\r\n\r\nclass Header extends Component<IProps, IState> {\r\n  public state: IState = {\r\n    menuStatus: true,\r\n  };\r\n\r\n  public handleMenuStatus = () => {\r\n    const { menuStatus } = this.state;\r\n    this.setState({ menuStatus: !menuStatus });\r\n  }\r\n\r\n  public render() {\r\n    const { children } = this.props;\r\n    const { menuStatus } = this.state;\r\n\r\n    if (typeof window === 'undefined') {\r\n      return null;\r\n    }\r\n\r\n    return(\r\n      <>\r\n        <MenuStatus\r\n          type=\"checkbox\"\r\n          checked={menuStatus}\r\n          readOnly={true}\r\n        />\r\n        <Nav>\r\n          <label\r\n            className=\"menu_state\"\r\n            onClick={this.handleMenuStatus}\r\n          >\r\n            <MenuStateIcon className=\"fa\" />\r\n          </label>\r\n          <List>\r\n            <ListItem>\r\n              <SLink\r\n                isActive={window.location.pathname === '/'}\r\n                to=\"/\"\r\n              >\r\n                <i className=\"fas fa-home\" />\r\n                <Span>Home</Span>\r\n              </SLink>\r\n            </ListItem>\r\n            <ListItem>\r\n              <SLink\r\n                isActive={window.location.pathname === `/${URL_BLOCKS}`}\r\n                to={`/${URL_BLOCKS}`}\r\n              >\r\n                <i className=\"fas fa-square\" />\r\n                <Span>Blocks</Span>\r\n              </SLink>\r\n            </ListItem>\r\n            <ListItem>\r\n              <SLink\r\n                isActive={window.location.pathname === `/${URL_TRANSACTIONS}`}\r\n                to={`${URL_TRANSACTIONS}`}\r\n              >\r\n                <i className=\"fas fa-dollar-sign\" />\r\n                <Span>Transactions</Span>\r\n              </SLink>\r\n            </ListItem>\r\n          </List>\r\n        </Nav>\r\n        <Main>\r\n          {children}\r\n        </Main>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import Header from './Header';\r\nexport default Header;\r\n","import React, { FC } from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\nimport { URL_ADDRESS, URL_BLOCKS, URL_TRANSACTIONS } from '../../contants';\r\nimport Address from '../../Routes/Address';\r\nimport Block from '../../Routes/Block';\r\nimport Blocks from '../../Routes/Blocks';\r\nimport Home from '../../Routes/Home';\r\nimport Transaction from '../../Routes/Transaction';\r\nimport Transactions from '../../Routes/Transactions';\r\nimport Header from '../Header';\r\n\r\nconst AppContainer = styled.div`\r\n  background-color: #fafafa;\r\n  min-height: 100vh;\r\n`;\r\n\r\nconst AppPresenter: FC = () => (\r\n  <BrowserRouter>\r\n    <AppContainer>\r\n      <Header>\r\n        <Switch>\r\n          <Route\r\n            component={Home}\r\n            exact={true}\r\n            path=\"/\"\r\n          />\r\n          <Route\r\n            component={Blocks}\r\n            exact={true}\r\n            path={`/${URL_BLOCKS}`}\r\n          />\r\n          <Route\r\n            component={Transactions}\r\n            exact={true}\r\n            path={`/${URL_TRANSACTIONS}`}\r\n          />\r\n          <Route\r\n            component={Block}\r\n            path={`/${URL_BLOCKS}/:index`}\r\n          />\r\n          <Route\r\n            component={Transaction}\r\n            path={`/${URL_TRANSACTIONS}/:id`}\r\n          />\r\n          <Route\r\n            component={Address}\r\n            path={`/${URL_ADDRESS}/:address`}\r\n          />\r\n          </Switch>\r\n      </Header>\r\n    </AppContainer>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default AppPresenter;\r\n","import React, { FC } from 'react';\r\nimport { createGlobalStyle, ThemeProvider } from 'styled-components';\r\nimport reset from 'styled-reset';\r\nimport typography from '../../typography';\r\nimport AppPresenter from './AppPresenter';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  ${reset};\r\n  ${typography};\r\n  a {\r\n    text-decoration: none !important;\r\n  }\r\n`;\r\n\r\nconst theme = {\r\n  boxShadow: '0 7px 14px rgba(50,50,93,.1), 0 3px 6px rgba(0,0,0,.08)',\r\n  textEllipsis: {\r\n    overflow: 'hidden',\r\n    'text-overflow': 'ellipsis',\r\n    'white-space': 'nowrap',\r\n  },\r\n};\r\n\r\nconst App: FC = () => (\r\n  <ThemeProvider theme={theme}>\r\n    <>\r\n      <GlobalStyle />\r\n      <AppPresenter />\r\n    </>\r\n  </ThemeProvider>\r\n);\r\n\r\nexport default App;\r\n","import AppContainer from './AppContainer';\r\nexport default AppContainer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}